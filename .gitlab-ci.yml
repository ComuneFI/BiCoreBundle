image: $CI_REGISTRY/docker/php7.4-xdebug-apache

services:
  - postgres:12.2-alpine

stages:
    - build
    - cleanup_build
    - test_coverage
    
variables:
  # symfony 4
  http_proxy: 'http://proxyhttp.comune.intranet:8080/'
  https_proxy: 'http://proxyhttps.comune.intranet:8080/'
  ftp_proxy: 'http://proxyftp.comune.intranet:8080/'
  no_proxy: 'localhost,127.0.0.1,.localhost,.comune.intranet'
  https_proxy_request_fulluri: 0
  HTTP_PROXY: 'http://proxyhttp.comune.intranet:8080/'
  HTTPS_PROXY: 'http://proxyhttps.comune.intranet:8080/'
  FTP_PROXY: 'http://proxyftp.comune.intranet:8080/'
  NO_PROXY: 'localhost,127.0.0.1,.localhost,.comune.intranet'
  HTTPS_PROXY_REQUEST_FULLURI: 0
  NSS_SSL_CBC_RANDOM_IV: 0
  
  ANT_OPTS: '-Dhttp.proxyHost=proxyhttp.comune.intranet -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxyhttps.comune.intranet -Dhttps.proxyPort=8080'
  
  POSTGRES_DB: bicorebundletest
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: "adminpass"
  
  DATABASE_URL: $DATABASE_URL
  MAILER_DSN: $MAILER_DSN
  
  DISPLAY: ":0.0"
cache:
  paths:
  - vendor/

before_script:
    - php -m
    #- wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    #- sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'

    # Install Chrome
    #- apt-get update && apt-get install -y google-chrome-stable 

    # Install ChromeDriver
    #- mkdir $CHROMEDRIVER_DIR
    #- CHROME_VERSION=$(google-chrome --product-version | sed -ne 's/[^0-9]*\(\([0-9]\.\)\{0,4\}[0-9][^.]\).*/\1/p') && CHROMEDRIVER_VERSION=$(curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION) && wget -q --continue -P $CHROMEDRIVER_DIR "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip" && unzip $CHROMEDRIVER_DIR/chromedriver* -d $CHROMEDRIVER_DIR      
    - apt-get update && apt-get install -y xvfb fontconfig pcregrep
    - Xvfb :0 -ac -screen 0 1024x768x24 &
    - echo "xdebug.mode=coverage" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini


build:
    only:
      refs:
        - develop
    stage: build
    script:
      - ant

cleanup_build_job:
  stage: cleanup_build
  script:
  - cat ./tests/var/logs/test.log
  when: on_failure

test_coverage_job:
  stage: test_coverage
  script:
  - php vendor/bin/php-coveralls -v
  - wget https://scrutinizer-ci.com/ocular.phar -t 3
  - php ocular.phar code-coverage:upload --format=php-clover build/artifacts/coverage/clover.xml

